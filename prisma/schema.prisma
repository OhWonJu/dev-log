// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminCode {
  code String @id
}

model Conversation {
  id        String    @id @default(uuid())
  chatCode  String
  startTime DateTime?
  isActive  Boolean   @default(false)

  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id      String @id @default(uuid())
  content String @db.Text

  chatCode String?

  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId String

  deleted Boolean @default(false) // soft delete

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([conversationId])
}

model Document {
  id          String  @id @default(uuid())
  title       String
  subTitle    String?
  isPublished Boolean
  isPinned    Boolean @default(false)
  content     String? @db.Text
  coverImage  String? @db.Text
  indexMap    String? @db.Text

  series   Series? @relation(fields: [seriesId], references: [id])
  seriesId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tags Tag[]

  @@index([seriesId])
}

model Tag {
  id      String @id @default(uuid())
  tagName String @unique()

  documents Document[]
}

model Series {
  id   String @id @default(uuid())
  name String

  documents Document[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
